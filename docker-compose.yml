version: '3.8'

networks:
    backend:
        driver: bridge

services:
    zookeeper:
        image: confluentinc/cp-zookeeper:7.0.1
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
        networks:
            - backend
        healthcheck:
            test: ["CMD-SHELL", "bash -c \"echo ruok >/dev/tcp/localhost/2181 && echo OK\""]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 30s

    kafka:
        image: confluentinc/cp-kafka:7.0.1
        depends_on:
            zookeeper:
                condition: service_healthy
        ports:
            - "9092:9092"
            - "29092:29092"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        networks:
            - backend
        healthcheck:
            test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server localhost:9092"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 30s

    postgres:
        image: postgres:13
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: postgres
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - backend
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 20s

    config-server:
        build: ./config-server
        ports:
            - "8888:8888"
        environment:
            SPRING_APPLICATION_NAME: config-server
            SPRING_CLOUD_CONFIG_SERVER_GIT_URI: https://github.com/SiarheiYasiuk/config.git
        depends_on:
            postgres:
                condition: service_healthy
        networks:
            - backend
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 20s

    discovery-server:
        build: ./discovery-server
        ports:
            - "8761:8761"
        environment:
            - SPRING_APPLICATION_JSON={"server":{"port":8761}}
        depends_on:
            config-server:
                condition: service_healthy
        networks:
            - backend
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 20s

    api-gateway:
        build: ./api-gateway
        ports:
            - "8081:8081"
        environment:
            SPRING_APPLICATION_NAME: api-gateway
            SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888
            EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://discovery-server:8761/eureka
        depends_on:
            discovery-server:
                condition: service_healthy
            kafka:
                condition: service_healthy
        networks:
            - backend
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 20s

    user-service:
        build: ./user-service
        ports:
            - "8082:8082"
        environment:
            - SPRING_APPLICATION_NAME=user-service
            - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
            - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka
            - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/postgres
            - SPRING_DATASOURCE_USERNAME=postgres
            - SPRING_DATASOURCE_PASSWORD=postgres
            - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
        depends_on:
            config-server:
                condition: service_healthy
            discovery-server:
                condition: service_healthy
            postgres:
                condition: service_healthy
            kafka:
                condition: service_healthy
        networks:
            - backend
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 20s

    notification-service:
        build: ./notification-service
        ports:
            - "8083:8083"
        environment:
            - SPRING_APPLICATION_NAME=notification-service
            - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
            - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka
            - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
        depends_on:
            config-server:
                condition: service_healthy
            discovery-server:
                condition: service_healthy
            kafka:
                condition: service_healthy
        networks:
            - backend
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 20s

volumes:
    postgres_data:
